# ===========================================
# ATLAS Environment Configuration Template
# ===========================================
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to version control

# ===========================================
# AI MODEL API KEYS (Required)
# ===========================================
# OpenAI - REQUIRED for primary models and embeddings
OPENAI_API_KEY=sk-proj-...your-key-here...

# Anthropic Claude - Optional for Claude models
ANTHROPIC_API_KEY=sk-ant-...your-key-here...

# Groq - Optional for fast inference
GROQ_API_KEY=gsk_...your-key-here...

# Google Gemini - Optional for Gemini models
GOOGLE_API_KEY=...your-key-here...

# HuggingFace - Optional for open models
HUGGINGFACE_API_KEY=hf_...your-key-here...

# OpenRouter - Optional (currently not used due to Letta compatibility)
OPENROUTER_API_KEY=sk-or-...your-key-here...

# ===========================================
# LETTA SERVER CONFIGURATION
# ===========================================
# Local mode recommended for development
LETTA_LOCAL_MODE=true
LETTA_SERVER_URL=http://localhost:8283

# Letta API key - Only needed if LETTA_LOCAL_MODE=false
# LETTA_API_KEY=...your-key-here...

# ===========================================
# TOOL APIs (For Agent Capabilities)
# ===========================================
# E2B - Code execution sandbox
E2B_API_KEY=your_e2b_api_key_here

# Firecrawl - Web scraping
FIRECRAWL_API_KEY=your_firecrawl_api_key_here

# Tavily - Web search
TAVILY_API_KEY=tvly_...your-key-here...

# GitHub - Version control operations
GITHUB_API_KEY=ghp_...your-key-here...

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# PostgreSQL - Main database
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=atlas_main
POSTGRES_USER=atlas
POSTGRES_PASSWORD=atlas_password

# Redis - Caching and pub/sub
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_URL=redis://localhost:6379

# ChromaDB - Vector database
CHROMA_HOST=localhost
CHROMA_PORT=8000
CHROMADB_URL=http://localhost:8000

# Neo4j - Graph database
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=atlas_password

# ===========================================
# MLFLOW CONFIGURATION
# ===========================================
MLFLOW_TRACKING_URI=http://localhost:5002
MLFLOW_BACKEND_STORE_URI=postgresql://mlflow:mlflow_password@localhost:5432/mlflow
MLFLOW_ARTIFACT_URI=s3://mlflow-artifacts
MLFLOW_S3_ENDPOINT_URL=http://localhost:9000

# MinIO - S3-compatible storage for MLflow
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
AWS_ACCESS_KEY_ID=minioadmin
AWS_SECRET_ACCESS_KEY=minioadmin

# ===========================================
# APPLICATION SETTINGS
# ===========================================
# Environment mode
NODE_ENV=development
PYTHON_ENV=development
ENVIRONMENT=development

# Logging
LOG_LEVEL=INFO

# API Server
API_HOST=0.0.0.0
API_PORT=8000

# Frontend
FRONTEND_URL=http://localhost:3000

# ===========================================
# FEATURE FLAGS
# ===========================================
ENABLE_MLFLOW_TRACKING=true
ENABLE_COST_TRACKING=true
ENABLE_AGENT_MEMORY=true
ENABLE_WEB_SEARCH=true

# ===========================================
# SECURITY
# ===========================================
# Generate a secure random string for production
SECRET_KEY=your-secret-key-here

# CORS configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# ===========================================
# OPTIONAL SERVICES
# ===========================================
# Notion API
# NOTION_API_KEY=...your-key-here...

# YouTube API
# YOUTUBE_API_KEY=...your-key-here...

# ===========================================
# INSTRUCTIONS
# ===========================================
# 1. Copy this file: cp .env.example .env
# 2. Fill in your actual API keys
# 3. For development, minimum required keys:
#    - OPENAI_API_KEY (for LLM and embeddings)
#    - Database passwords (or use defaults for local dev)
#
# 4. Start services:
#    - Letta server: letta server --port 8283
#    - MLflow: mlflow server --host 0.0.0.0 --port 5002
#    - Backend: cd backend && uvicorn main:app --reload
#    - Frontend: cd frontend && npm run dev
#
# 5. For production:
#    - Set ENVIRONMENT=production
#    - Use secure passwords for all databases
#    - Update all URLs to production domains
#    - Generate a secure SECRET_KEY